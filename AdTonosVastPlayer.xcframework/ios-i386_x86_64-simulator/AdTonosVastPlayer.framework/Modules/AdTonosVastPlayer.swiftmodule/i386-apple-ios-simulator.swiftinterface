// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AdTonosVastPlayer
import AdTonosLinkGenerator
@_exported import AdTonosVastPlayer
import Foundation
import GoogleInteractiveMediaAds
import NotificationCenter
import Swift
import UIKit
import _Concurrency
public enum AdTonosAdRequestResult : Swift.Equatable {
  case success
  case inProgress
  case failed
  case alreadyPrepared
  case invalidKey
  case invalidLanguage
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: AdTonosVastPlayer.AdTonosAdRequestResult, b: AdTonosVastPlayer.AdTonosAdRequestResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public protocol AdTonosVastPlayerObserver : AnyObject {
  func onAdTonosVastAdsLoaded()
  func onAdTonosVastError(_ error: AdTonosVastPlayer.AdTonosVastError)
  func onAdTonosVastAdsAvabilityExpired()
  func onAdTonosVastAdsStarted()
  func onAdTonosVastAdPaused()
  func onAdTonosVastAdPlayStarted()
  func onAdTonosVastAdsEnded()
}
public enum AdTonosVastError : Swift.Error, Swift.Equatable {
  case noAds
  case networkError
  case authorizationError
  case serverError
  case internalError
  case playAdError
  case pauseAdError
  case unknownError
  case loadingError
  case invalidBuilderParams
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: AdTonosVastPlayer.AdTonosVastError, b: AdTonosVastPlayer.AdTonosVastError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class AdTonosSDK : AdTonosVastPlayer.AdTonosPlayer {
  public static let shared: AdTonosVastPlayer.AdTonosPlayer
  public var isAdAvailable: Swift.Bool {
    get
  }
  public func add(observer: AdTonosVastPlayer.AdTonosVastPlayerObserver)
  public func remove(observer: AdTonosVastPlayer.AdTonosVastPlayerObserver)
  public func removeAllObservers()
  public func requestForAds(with builder: AdTonosLinkGenerator.AdTonosVastURLBuilder) -> AdTonosVastPlayer.AdTonosAdRequestResult
  public func playAd() -> Swift.Bool
  public func pauseAd() -> Swift.Bool
  public func clear()
  public func intialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  public func start(with consent: AdTonosLinkGenerator.AdTonosConsent)
  public var isStarted: Swift.Bool {
    get
  }
  public func loadLatestConsent() -> AdTonosLinkGenerator.AdTonosConsent?
  public func save(consent: AdTonosLinkGenerator.AdTonosConsent)
  public func createBuilder() -> AdTonosLinkGenerator.AdTonosVastURLBuilder
  public func dispose()
  @objc deinit
}
public protocol AdTonosPlayer : AdTonosLinkGenerator.AdTonos {
  var isAdAvailable: Swift.Bool { get }
  func add(observer: AdTonosVastPlayer.AdTonosVastPlayerObserver)
  func remove(observer: AdTonosVastPlayer.AdTonosVastPlayerObserver)
  func removeAllObservers()
  func requestForAds(with builder: AdTonosLinkGenerator.AdTonosVastURLBuilder) -> AdTonosVastPlayer.AdTonosAdRequestResult
  func playAd() -> Swift.Bool
  func pauseAd() -> Swift.Bool
  func clear()
}
extension AdTonosVastPlayer.AdTonosAdRequestResult : Swift.Hashable {}
extension AdTonosVastPlayer.AdTonosVastError : Swift.Hashable {}
