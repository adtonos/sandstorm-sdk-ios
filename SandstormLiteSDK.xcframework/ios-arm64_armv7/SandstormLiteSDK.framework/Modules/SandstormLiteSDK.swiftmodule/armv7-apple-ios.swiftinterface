// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SandstormLiteSDK
import AVFoundation
import Foundation
import GoogleInteractiveMediaAds
import NotificationCenter
import Swift
import ThunderLiteSDK
import UIKit
import _Concurrency
public enum SandstormAdRequestResult : Swift.Equatable {
  case success
  case inProgress
  case failed
  case alreadyPrepared
  case invalidKey
  case invalidLanguage
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: SandstormLiteSDK.SandstormAdRequestResult, b: SandstormLiteSDK.SandstormAdRequestResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public protocol SandstormObserver : AnyObject {
  func onVastAdsLoaded()
  func onVastError(_ error: SandstormLiteSDK.SandstormError)
  func onVastAdsAvabilityExpired()
  func onVastAdsStarted()
  func onVastAdPaused()
  func onVastAdPlayStarted()
  func onVastAdsEnded()
  func onCleared()
}
public enum SandstormError : Swift.Error, Swift.Equatable {
  case noAds
  case networkError
  case authorizationError
  case serverError
  case internalError
  case playAdError
  case pauseAdError
  case unknownError
  case loadingError
  case invalidBuilderParams
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: SandstormLiteSDK.SandstormError, b: SandstormLiteSDK.SandstormError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class ATSandstormSDK : SandstormLiteSDK.Sandstorm {
  public static let shared: SandstormLiteSDK.Sandstorm
  public var isAdAvailable: Swift.Bool {
    get
  }
  public func add(sandstormObserver: SandstormLiteSDK.SandstormObserver)
  public func add(thunderObserver: ThunderLiteSDK.ThunderObserver)
  public func remove(sandstormObserver: SandstormLiteSDK.SandstormObserver)
  public func remove(thunderObserver: ThunderLiteSDK.ThunderObserver)
  public func removeAllObservers()
  public func requestForAds(with builder: ThunderLiteSDK.ThunderVastURLBuilder) -> SandstormLiteSDK.SandstormAdRequestResult
  public func playAd() -> Swift.Bool
  public func pauseAd() -> Swift.Bool
  public func clear()
  public func initialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  public func start(with consent: ThunderLiteSDK.AdTonosConsent)
  public var isStarted: Swift.Bool {
    get
  }
  public func loadLatestConsent() -> ThunderLiteSDK.AdTonosConsent?
  public func save(consent: ThunderLiteSDK.AdTonosConsent)
  public func createBuilder() -> ThunderLiteSDK.ThunderVastURLBuilder
  public func dispose()
  @objc deinit
}
public protocol Sandstorm : ThunderLiteSDK.Thunder {
  var isAdAvailable: Swift.Bool { get }
  func add(sandstormObserver: SandstormLiteSDK.SandstormObserver)
  func remove(sandstormObserver: SandstormLiteSDK.SandstormObserver)
  func requestForAds(with builder: ThunderLiteSDK.ThunderVastURLBuilder) -> SandstormLiteSDK.SandstormAdRequestResult
  func playAd() -> Swift.Bool
  func pauseAd() -> Swift.Bool
  func clear()
}
extension SandstormLiteSDK.SandstormAdRequestResult : Swift.Hashable {}
extension SandstormLiteSDK.SandstormError : Swift.Hashable {}
